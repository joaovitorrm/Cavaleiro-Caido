-- MySQL Script generated by MySQL Workbench
-- Tue Jul 25 10:05:02 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cavaleiro
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cavaleiro
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cavaleiro` DEFAULT CHARACTER SET utf8 ;
USE `cavaleiro` ;

-- -----------------------------------------------------
-- Table `cavaleiro`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL,
  `email` VARCHAR(100) NULL,
  `senha` VARCHAR(255) NULL,
  `cargo` ENUM('admin', 'user') NULL,
  `imagemURL` VARCHAR(45) NULL,
  PRIMARY KEY (`iduser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cavaleiro`.`achievement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`achievement` (
  `idachievement` INT NOT NULL,
  `condicao` VARCHAR(45) NULL,
  `img` VARCHAR(45) NULL,
  `recompensa` TEXT NULL,
  PRIMARY KEY (`idachievement`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cavaleiro`.`chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`chat` (
  `idchat` INT NOT NULL AUTO_INCREMENT,
  `tempo` DATETIME NULL,
  `mensagem` TEXT NULL,
  `global` TINYINT NULL,
  `remetente` INT NOT NULL,
  `destinatario` INT NULL,
  PRIMARY KEY (`idchat`),
  INDEX `fk_chat_user1_idx` (`remetente` ASC),
  INDEX `fk_chat_user2_idx` (`destinatario` ASC),
  CONSTRAINT `fk_chat_user1`
    FOREIGN KEY (`remetente`)
    REFERENCES `cavaleiro`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_chat_user2`
    FOREIGN KEY (`destinatario`)
    REFERENCES `cavaleiro`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cavaleiro`.`minigame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`minigame` (
  `idminigame` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL,
  `imagemURL` VARCHAR(45) NULL,
  `minigamecol` VARCHAR(45) NULL,
  PRIMARY KEY (`idminigame`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cavaleiro`.`highscore`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`highscore` (
  `idhighscore` INT NOT NULL AUTO_INCREMENT,
  `pontuacao` VARCHAR(45) NULL,
  `user_iduser` INT NOT NULL,
  `minigame_idminigame` INT NOT NULL,
  PRIMARY KEY (`idhighscore`, `user_iduser`),
  INDEX `fk_highscore_user1_idx` (`user_iduser` ASC),
  INDEX `fk_highscore_minigame1_idx` (`minigame_idminigame` ASC),
  CONSTRAINT `fk_highscore_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `cavaleiro`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_highscore_minigame1`
    FOREIGN KEY (`minigame_idminigame`)
    REFERENCES `cavaleiro`.`minigame` (`idminigame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cavaleiro`.`user_has_achievement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`user_has_achievement` (
  `user_iduser` INT NOT NULL,
  `achievement_idachievement` INT NOT NULL,
  PRIMARY KEY (`user_iduser`, `achievement_idachievement`),
  INDEX `fk_user_has_achievement_achievement1_idx` (`achievement_idachievement` ASC),
  INDEX `fk_user_has_achievement_user_idx` (`user_iduser` ASC),
  CONSTRAINT `fk_user_has_achievement_user`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `cavaleiro`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_achievement_achievement1`
    FOREIGN KEY (`achievement_idachievement`)
    REFERENCES `cavaleiro`.`achievement` (`idachievement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cavaleiro`.`amigos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cavaleiro`.`amigos` (
  `user_iduser` INT NOT NULL,
  `user_iduser1` INT NOT NULL,
  PRIMARY KEY (`user_iduser`, `user_iduser1`),
  INDEX `fk_user_has_user_user2_idx` (`user_iduser1` ASC),
  INDEX `fk_user_has_user_user1_idx` (`user_iduser` ASC),
  CONSTRAINT `fk_user_has_user_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `cavaleiro`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_user2`
    FOREIGN KEY (`user_iduser1`)
    REFERENCES `cavaleiro`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
